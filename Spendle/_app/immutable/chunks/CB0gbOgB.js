import{s as ue,r as me,n as X,g as ye,E as he,a as ge,b as fe,c as xe,t as Ee,f as Se,p as Pe,N as we,A as Ie,d as ve,e as Ce,h as be,i as Re,S as Ae,D as ze,F as De,j as Fe,k as _e,l as ke,m as $e,o as Ne,q as He,u as Ue,v as Oe,w as Le,x as Te,y as Me,z as Ge,B as qe,C as je,G as Be,H as Ve,I as Je,J as Ke,K as We,L as Xe,M as Ye,O as Qe,P as Ze,Q as et,R as tt,T as nt,U as ot,V as st,W as it,_ as c,X as Y,Y as rt,Z as at,$ as ct,a0 as dt,a1 as l,a2 as Q,a3 as v,a4 as pt,a5 as lt,a6 as Z,a7 as ee,a8 as te}from"./CzLitXsu.js";const ut=e=>{if(e==null)return;let t;if(typeof e=="number")t=e;else if(typeof e=="string")t=ue(e);else if(typeof e=="object"&&e.tag===1)t=e.value;else throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");if(Number.isNaN(t)||t===1/0||t===-1/0)throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");return new Date(Math.round(t*1e3))};class mt{async sign(t,n,o){return t}}const b="***SensitiveInformation***",yt=async(e,t,n)=>({operation:ye(t).operation,region:await X(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function ht(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"cognito-identity",region:e.region},propertiesExtractor:(t,n)=>({signingProperties:{config:t,context:n}})}}function I(e){return{schemeId:"smithy.api#noAuth"}}const gt=e=>{const t=[];switch(e.operation){case"GetCredentialsForIdentity":{t.push(I());break}case"GetId":{t.push(I());break}case"GetOpenIdToken":{t.push(I());break}case"UnlinkIdentity":{t.push(I());break}default:t.push(ht(e))}return t},ft=e=>{const t=me(e);return Object.assign(t,{authSchemePreference:X(e.authSchemePreference??[])})},xt=e=>Object.assign(e,{useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,defaultSigningName:"cognito-identity"}),ne={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},Et="3.906.0",St={version:Et},oe="required",r="fn",a="argv",g="ref",T=!0,M="isSet",P="booleanEquals",h="error",u="endpoint",m="tree",R="PartitionResult",A="getAttr",E="stringEquals",G={[oe]:!1,type:"String"},q={[oe]:!0,default:!1,type:"Boolean"},j={[g]:"Endpoint"},se={[r]:P,[a]:[{[g]:"UseFIPS"},!0]},ie={[r]:P,[a]:[{[g]:"UseDualStack"},!0]},i={},S={[g]:"Region"},B={[r]:A,[a]:[{[g]:R},"supportsFIPS"]},re={[g]:R},V={[r]:P,[a]:[!0,{[r]:A,[a]:[re,"supportsDualStack"]}]},J=[se],K=[ie],W=[S],Pt={parameters:{Region:G,UseDualStack:q,UseFIPS:q,Endpoint:G},rules:[{conditions:[{[r]:M,[a]:[j]}],rules:[{conditions:J,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:h},{conditions:K,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:h},{endpoint:{url:j,properties:i,headers:i},type:u}],type:m},{conditions:[{[r]:M,[a]:W}],rules:[{conditions:[{[r]:"aws.partition",[a]:W,assign:R}],rules:[{conditions:[se,ie],rules:[{conditions:[{[r]:P,[a]:[T,B]},V],rules:[{conditions:[{[r]:E,[a]:[S,"us-east-1"]}],endpoint:{url:"https://cognito-identity-fips.us-east-1.amazonaws.com",properties:i,headers:i},type:u},{conditions:[{[r]:E,[a]:[S,"us-east-2"]}],endpoint:{url:"https://cognito-identity-fips.us-east-2.amazonaws.com",properties:i,headers:i},type:u},{conditions:[{[r]:E,[a]:[S,"us-west-1"]}],endpoint:{url:"https://cognito-identity-fips.us-west-1.amazonaws.com",properties:i,headers:i},type:u},{conditions:[{[r]:E,[a]:[S,"us-west-2"]}],endpoint:{url:"https://cognito-identity-fips.us-west-2.amazonaws.com",properties:i,headers:i},type:u},{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:i,headers:i},type:u}],type:m},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:h}],type:m},{conditions:J,rules:[{conditions:[{[r]:P,[a]:[B,T]}],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",properties:i,headers:i},type:u}],type:m},{error:"FIPS is enabled but this partition does not support FIPS",type:h}],type:m},{conditions:K,rules:[{conditions:[V],rules:[{conditions:[{[r]:E,[a]:["aws",{[r]:A,[a]:[re,"name"]}]}],endpoint:{url:"https://cognito-identity.{Region}.amazonaws.com",properties:i,headers:i},type:u},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:i,headers:i},type:u}],type:m},{error:"DualStack is enabled but this partition does not support DualStack",type:h}],type:m},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",properties:i,headers:i},type:u}],type:m}],type:m},{error:"Invalid Configuration: Missing Region",type:h}]},wt=Pt,It=new he({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),vt=(e,t={})=>It.get(e,()=>ge(wt,{endpointParams:e,logger:t.logger}));xe.aws=fe;const Ct=e=>({apiVersion:"2014-06-30",base64Decoder:e?.base64Decoder??Ce,base64Encoder:e?.base64Encoder??ve,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??vt,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??gt,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:t=>t.getIdentityProvider("aws.auth#sigv4"),signer:new Ie},{schemeId:"smithy.api#noAuth",identityProvider:t=>t.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new mt}],logger:e?.logger??new we,serviceId:e?.serviceId??"Cognito Identity",urlParser:e?.urlParser??Pe,utf8Decoder:e?.utf8Decoder??Se,utf8Encoder:e?.utf8Encoder??Ee}),bt=e=>{const t=be(e),n=()=>t().then(Ue),o=Ct(e);return{...o,...e,runtime:"browser",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??$e,credentialDefaultProvider:e?.credentialDefaultProvider??(s=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:e?.defaultUserAgentProvider??ke({serviceId:o.serviceId,clientVersion:St.version}),maxAttempts:e?.maxAttempts??_e,region:e?.region??Fe("Region is missing"),requestHandler:De.create(e?.requestHandler??n),retryMode:e?.retryMode??(async()=>(await n()).retryMode||ze),sha256:e?.sha256??Ae,streamCollector:e?.streamCollector??Re,useDualstackEndpoint:e?.useDualstackEndpoint??(()=>Promise.resolve(He)),useFipsEndpoint:e?.useFipsEndpoint??(()=>Promise.resolve(Ne))}},Rt=e=>{const t=e.httpAuthSchemes;let n=e.httpAuthSchemeProvider,o=e.credentials;return{setHttpAuthScheme(s){const y=t.findIndex(f=>f.schemeId===s.schemeId);y===-1?t.push(s):t.splice(y,1,s)},httpAuthSchemes(){return t},setHttpAuthSchemeProvider(s){n=s},httpAuthSchemeProvider(){return n},setCredentials(s){o=s},credentials(){return o}}},At=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),zt=(e,t)=>{const n=Object.assign(Oe(e),Le(e),Te(e),Rt(e));return t.forEach(o=>o.configure(n)),Object.assign(e,Me(n),Ge(n),qe(n),At(n))};class Zt extends je{config;constructor(...[t]){const n=bt(t||{});super(n),this.initConfig=n;const o=xt(n),s=Be(o),y=Ve(s),f=Je(y),C=We(f),x=Ke(C),w=ft(x),pe=zt(w,t?.extensions||[]);this.config=pe,this.middlewareStack.use(Xe(this.config)),this.middlewareStack.use(Ye(this.config)),this.middlewareStack.use(Qe(this.config)),this.middlewareStack.use(Ze(this.config)),this.middlewareStack.use(et(this.config)),this.middlewareStack.use(tt(this.config)),this.middlewareStack.use(nt(this.config,{httpAuthSchemeParametersProvider:yt,identityProviderConfigProvider:async le=>new ot({"aws.auth#sigv4":le.credentials})})),this.middlewareStack.use(st(this.config))}destroy(){super.destroy()}}class d extends it{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}class z extends d{name="InternalErrorException";$fault="server";constructor(t){super({name:"InternalErrorException",$fault:"server",...t}),Object.setPrototypeOf(this,z.prototype)}}class D extends d{name="InvalidParameterException";$fault="client";constructor(t){super({name:"InvalidParameterException",$fault:"client",...t}),Object.setPrototypeOf(this,D.prototype)}}class F extends d{name="LimitExceededException";$fault="client";constructor(t){super({name:"LimitExceededException",$fault:"client",...t}),Object.setPrototypeOf(this,F.prototype)}}class _ extends d{name="NotAuthorizedException";$fault="client";constructor(t){super({name:"NotAuthorizedException",$fault:"client",...t}),Object.setPrototypeOf(this,_.prototype)}}class k extends d{name="ResourceConflictException";$fault="client";constructor(t){super({name:"ResourceConflictException",$fault:"client",...t}),Object.setPrototypeOf(this,k.prototype)}}class $ extends d{name="TooManyRequestsException";$fault="client";constructor(t){super({name:"TooManyRequestsException",$fault:"client",...t}),Object.setPrototypeOf(this,$.prototype)}}class N extends d{name="ResourceNotFoundException";$fault="client";constructor(t){super({name:"ResourceNotFoundException",$fault:"client",...t}),Object.setPrototypeOf(this,N.prototype)}}class H extends d{name="ExternalServiceException";$fault="client";constructor(t){super({name:"ExternalServiceException",$fault:"client",...t}),Object.setPrototypeOf(this,H.prototype)}}class U extends d{name="InvalidIdentityPoolConfigurationException";$fault="client";constructor(t){super({name:"InvalidIdentityPoolConfigurationException",$fault:"client",...t}),Object.setPrototypeOf(this,U.prototype)}}class O extends d{name="DeveloperUserAlreadyRegisteredException";$fault="client";constructor(t){super({name:"DeveloperUserAlreadyRegisteredException",$fault:"client",...t}),Object.setPrototypeOf(this,O.prototype)}}class L extends d{name="ConcurrentModificationException";$fault="client";constructor(t){super({name:"ConcurrentModificationException",$fault:"client",...t}),Object.setPrototypeOf(this,L.prototype)}}const Dt=e=>({...e,...e.Logins&&{Logins:b}}),Ft=e=>({...e,...e.SecretKey&&{SecretKey:b}}),_t=e=>({...e,...e.Credentials&&{Credentials:Ft(e.Credentials)}}),kt=e=>({...e,...e.Logins&&{Logins:b}}),$t=async(e,t)=>{const n=de("GetCredentialsForIdentity");let o;return o=JSON.stringify(c(e)),ce(t,n,"/",void 0,o)},Nt=async(e,t)=>{const n=de("GetId");let o;return o=JSON.stringify(c(e)),ce(t,n,"/",void 0,o)},Ht=async(e,t)=>{if(e.statusCode>=300)return ae(e,t);const n=await Y(e.body,t);let o={};return o=Xt(n),{$metadata:p(e),...o}},Ut=async(e,t)=>{if(e.statusCode>=300)return ae(e,t);const n=await Y(e.body,t);let o={};return o=c(n),{$metadata:p(e),...o}},ae=async(e,t)=>{const n={...e,body:await at(e.body,t)},o=ct(e,n.body);switch(o){case"InternalErrorException":case"com.amazonaws.cognitoidentity#InternalErrorException":throw await Mt(n);case"InvalidParameterException":case"com.amazonaws.cognitoidentity#InvalidParameterException":throw await qt(n);case"LimitExceededException":case"com.amazonaws.cognitoidentity#LimitExceededException":throw await jt(n);case"NotAuthorizedException":case"com.amazonaws.cognitoidentity#NotAuthorizedException":throw await Bt(n);case"ResourceConflictException":case"com.amazonaws.cognitoidentity#ResourceConflictException":throw await Vt(n);case"TooManyRequestsException":case"com.amazonaws.cognitoidentity#TooManyRequestsException":throw await Kt(n);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentity#ResourceNotFoundException":throw await Jt(n);case"ExternalServiceException":case"com.amazonaws.cognitoidentity#ExternalServiceException":throw await Tt(n);case"InvalidIdentityPoolConfigurationException":case"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":throw await Gt(n);case"DeveloperUserAlreadyRegisteredException":case"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":throw await Lt(n);case"ConcurrentModificationException":case"com.amazonaws.cognitoidentity#ConcurrentModificationException":throw await Ot(n);default:const s=n.body;return Yt({output:e,parsedBody:s,errorCode:o})}},Ot=async(e,t)=>{const n=e.body,o=c(n),s=new L({$metadata:p(e),...o});return l(s,n)},Lt=async(e,t)=>{const n=e.body,o=c(n),s=new O({$metadata:p(e),...o});return l(s,n)},Tt=async(e,t)=>{const n=e.body,o=c(n),s=new H({$metadata:p(e),...o});return l(s,n)},Mt=async(e,t)=>{const n=e.body,o=c(n),s=new z({$metadata:p(e),...o});return l(s,n)},Gt=async(e,t)=>{const n=e.body,o=c(n),s=new U({$metadata:p(e),...o});return l(s,n)},qt=async(e,t)=>{const n=e.body,o=c(n),s=new D({$metadata:p(e),...o});return l(s,n)},jt=async(e,t)=>{const n=e.body,o=c(n),s=new F({$metadata:p(e),...o});return l(s,n)},Bt=async(e,t)=>{const n=e.body,o=c(n),s=new _({$metadata:p(e),...o});return l(s,n)},Vt=async(e,t)=>{const n=e.body,o=c(n),s=new k({$metadata:p(e),...o});return l(s,n)},Jt=async(e,t)=>{const n=e.body,o=c(n),s=new N({$metadata:p(e),...o});return l(s,n)},Kt=async(e,t)=>{const n=e.body,o=c(n),s=new $({$metadata:p(e),...o});return l(s,n)},Wt=(e,t)=>Q(e,{AccessKeyId:v,Expiration:n=>pt(ut(lt(n))),SecretKey:v,SessionToken:v}),Xt=(e,t)=>Q(e,{Credentials:n=>Wt(n),IdentityId:v}),p=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),Yt=dt(d),ce=async(e,t,n,o,s)=>{const{hostname:y,protocol:f="https",port:C,path:x}=await e.endpoint(),w={protocol:f,hostname:y,port:C,method:"POST",path:x.endsWith("/")?x.slice(0,-1)+n:x+n,headers:t};return s!==void 0&&(w.body=s),new rt(w)};function de(e){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityService.${e}`}}class en extends Z.classBuilder().ep(ne).m(function(t,n,o,s){return[ee(o,this.serialize,this.deserialize),te(o,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetCredentialsForIdentity",{}).n("CognitoIdentityClient","GetCredentialsForIdentityCommand").f(Dt,_t).ser($t).de(Ht).build(){}class tn extends Z.classBuilder().ep(ne).m(function(t,n,o,s){return[ee(o,this.serialize,this.deserialize),te(o,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetId",{}).n("CognitoIdentityClient","GetIdCommand").f(kt,void 0).ser(Nt).de(Ut).build(){}export{Zt as CognitoIdentityClient,en as GetCredentialsForIdentityCommand,tn as GetIdCommand};
